---
const amenities = [
  {
    name: "Amenidad 1",
    description: "Descripción breve de la amenidad 1.",
    image: "/img/Fachada.jpg",
    icon: "/icono1.svg",
  },
  {
    name: "Amenidad 2",
    description: "Descripción breve de la amenidad 2.",
    image: "/img/Fachada.jpg",
    icon: "/icono2.svg",
  },
  {
    name: "Amenidad 3",
    description: "Descripción breve de la amenidad 3.",
    image: "/img/Fachada.jpg",
    icon: "/icono3.svg",
  },
  // Agrega más amenidades según sea necesario, cada una con su propio icono
  {
    name: "Amenidad 13",
    description: "Descripción breve de la amenidad 13.",
    image: "/img/Fachada.jpg",
    icon: "/icono13.svg",
  },
];
---.

<div class="relative w-full">
    <!-- Section Title with Light Background -->
    <div class="relative py-8 px-6 text-center bg-gradient-to-r from-white via-gray-100 to-white shadow-lg">
        <h2 class="text-4xl font-bold text-gray-800 mb-4 drop-shadow-sm">
            Nuestras Amenidades
        </h2>
        <div class="w-24 h-1 mx-auto bg-gray-800 rounded-full"></div>
    </div>

    <!-- Carousel -->
    <div id="amenities-carousel" class="relative w-full" data-carousel="slide">
        <!-- Carousel wrapper -->
        <div class="relative h-64 md:h-96 overflow-hidden rounded-lg">
            {amenities.map((amenity, index) => (
                <div class={`duration-700 ease-in-out ${index === 0 ? 'block' : 'hidden'}`} data-carousel-item>
                    <img src={amenity.image} class="absolute block w-full h-full object-cover" alt={amenity.name} />
                    <div class="absolute bottom-0 left-0 p-4 bg-white bg-opacity-70 text-gray-800">
                        <h3 class="text-lg font-semibold">{amenity.name}</h3>
                        <p class="text-sm">{amenity.description}</p>
                    </div>
                </div>
            ))}
        </div>

        <!-- Slider controls -->
        <button type="button" class="absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-800/30 group-hover:bg-gray-800/50 group-focus:ring-4 group-focus:ring-gray-800 group-focus:outline-none">
                <svg class="w-4 h-4 text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
                </svg>
                <span class="sr-only">Previous</span>
            </span>
        </button>
        <button type="button" class="absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-800/30 group-hover:bg-gray-800/50 group-focus:ring-4 group-focus:ring-gray-800 group-focus:outline-none">
                <svg class="w-4 h-4 text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 9l4-4-4-4"/>
                </svg>
                <span class="sr-only">Next</span>
            </span>
        </button>
    </div>

    <!-- Desktop Indicators -->
    <div class="hidden md:flex absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
        {amenities.map((amenity, index) => (
            <button
                type="button"
                class="w-12 h-12 rounded-full bg-white p-2 flex items-center justify-center border border-gray-300"
                aria-current={index === 0 ? 'true' : 'false'}
                aria-label={`Slide ${index + 1}`}
                data-carousel-slide-to={index}
            >
                <img src={amenity.icon} alt={`Icono de ${amenity.name}`} class="w-8 h-8" />
            </button>
        ))}
    </div>

    <!-- Mobile Dropdown Indicator -->
    <div class="md:hidden relative">
        <button
            id="amenities-menu-toggle"
            class="block w-full py-2 px-4 text-center bg-gray-800 text-white rounded-md focus:outline-none"
        >
            Selecciona una amenidad
        </button>
        <div
            id="amenities-menu"
            class="absolute z-40 hidden w-full mt-2 bg-white shadow-lg rounded-md"
        >
            {amenities.map((amenity, index) => (
                <button
                    type="button"
                    class="w-full flex items-center justify-between py-2 px-4 hover:bg-gray-100"
                    aria-label={`Selecciona ${amenity.name}`}
                    data-carousel-slide-to={index}
                >
                    <span class="text-gray-800">{amenity.name}</span>
                    <img src={amenity.icon} alt={`Icono de ${amenity.name}`} class="w-6 h-6 bg-white p-1 rounded-full border border-gray-300" />
                </button>
            ))}
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleButton = document.getElementById('amenities-menu-toggle');
        const menu = document.getElementById('amenities-menu');
    
        if (toggleButton && menu) {
            toggleButton.addEventListener('click', () => {
                menu.classList.toggle('hidden');
            });
        }
    });
    </script>
    
