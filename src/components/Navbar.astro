---

import Modal from "./Modal.astro";

const menuItems = [
    { name: t("nav.item1"), icon: '/img/IconosMenu/About.svg', href: '#NOSOTROS' },
    { name: t("nav.item2"), icon: '/img/IconosMenu/Casas.svg', href: '#MODELOS' },
    { name: t("nav.item3"), icon: '/img/IconosMenu/Golf.svg', href: '#CAMPODEGOLF' },
    { name: t("nav.item4"), icon: '/img/IconosMenu/Amenidades.svg', href: '#AMENIDADES' },
    //{ name: t("nav.item5"), icon: '/img/IconosMenu/Video.svg', href: '#VIDEO' },
    { name: t("nav.item6"), icon: '/img/IconosMenu/Restaurant.svg', href: '#REST1900' },
    { name: t("nav.item7"), icon: '/img/IconosMenu/Contacto.svg', href: '#CONTACTO' },
];

import i18next, { t } from "i18next";
import { Trans, HeadHrefLangs } from "astro-i18next/components";
import { LanguageSelector } from "astro-i18next/components";
---

<!-- Botón flotante siempre visible -->
<div class="fixed top-4 right-4 z-50">
    <button id="menu-toggle" class="text-white bg-primary hover:bg-red-900 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-8 py-3 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 ">
        {t("nav.menu")}
    </button>
</div>

<!-- Componente drawer -->
<div id="drawer-navigation" class="fixed top-0 left-0 z-50 w-64 h-screen p-4 overflow-y-auto transition-transform -translate-x-full bg-white dark:bg-gray-800" tabindex="-1" aria-labelledby="drawer-navigation-label">
    <h5 id="drawer-navigation-label" class="text-base font-semibold text-gray-500 uppercase dark:text-gray-400">Menu</h5>
    <div class="py-4 overflow-y-auto">
        <ul class="space-y-2 font-medium">
            {menuItems.map(item => (
                <li>
                    <a href={item.href} class="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group">
                        <img src={item.icon} alt={item.name} class="w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white" />
                        <span class="ms-3">{item.name}</span>
                    </a>
                </li>
            ))}
        </ul>

        <!-- Línea divisoria -->
        <hr class="my-4 border-gray-300 dark:border-gray-600" />

        <!-- Botón verde "Inmobiliarias" -->
        <div class="mt-4">
            <button data-modal-target="authentication-modal" data-modal-toggle="authentication-modal" class="w-full flex items-center justify-center text-white bg-green-600 hover:bg-green-700 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 focus:outline-none shadow-lg" >
                {t("nav.inmobi")}
            </button>
            <Modal/>
        </div>

        <!-- Otra línea divisoria -->
        <hr class="my-4 border-gray-300 dark:border-gray-600" />

        <!-- Botones que son imágenes sin texto con efecto de botón -->
        <div class="mt-4 space-y-4">
           
            <a href="https://www.lyceesanjose.com" target="_blank" rel="noopener noreferrer">
                <button class="w-full h-16 bg-center bg-cover rounded-lg focus:ring-4 focus:ring-gray-300 focus:outline-none shadow-lg hover:shadow-xl transition-shadow duration-300"
                    style="background-image: url('/img/BotonesWeb/Lycee.jpg');">
                </button>
            </a> 
            <a href="https://www.mezcaldosreyes.com" target="_blank" rel="noopener noreferrer">
                <button class="w-full h-16 bg-center bg-cover rounded-lg focus:ring-4 focus:ring-gray-300 focus:outline-none shadow-lg hover:shadow-xl transition-shadow duration-300"
                    style="background-image: url('/img/BotonesWeb/DosReyes.jpg');">
                </button>
            </a>            
        </div>
    </div>
</div>

<style>
    /* Estilos adicionales para darle efecto de botón */
    button {
        transition: all 0.3s ease;
    }

    button:hover {
        transform: translateY(-2px);
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleButton = document.getElementById('menu-toggle');
        const drawerNavigation = document.getElementById('drawer-navigation');
        const menuLinks = document.querySelectorAll('#drawer-navigation a');

        if (toggleButton && drawerNavigation) {
            toggleButton.addEventListener('click', () => {
                drawerNavigation.classList.toggle('-translate-x-full');
            });

            menuLinks.forEach(link => {
                link.addEventListener('click', (event) => {
                    const href = link.getAttribute('href');
                    
                    if (href && href.startsWith('http')) {
                        // No prevenir el comportamiento por defecto para URLs externas
                        return;
                    }
                    
                    event.preventDefault();
                    
                    if (drawerNavigation) {
                        drawerNavigation.classList.add('-translate-x-full');
                    }

                    const targetId = href ? href.substring(1) : null;
                    const targetElement = targetId ? document.getElementById(targetId) : null;

                    if (targetElement) {
                        targetElement.scrollIntoView({ behavior: 'smooth' });
                    }
                });
            });
        }
    });
</script>


